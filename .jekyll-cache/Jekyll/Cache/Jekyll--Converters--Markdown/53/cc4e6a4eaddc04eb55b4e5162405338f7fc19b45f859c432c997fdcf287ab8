I"[S<h2 id="java-config">JAVA CONFIG</h2>
<p>Spring MVC 프로젝트에서 xml 파일 대신 java를 이용하여 설정할 수 있도록 환경 셋팅</p>

<ul>
  <li>Spring MVC 프로젝트 생성 필요</li>
</ul>

<hr />

<h2 id="git-source">GIT SOURCE</h2>
<ul>
  <li><a href="https://github.com/onlytigi/springStudy/commit/ed3baabe878b17e824895cf86a4acf160a3dd702">springStudy - java config commit</a></li>
</ul>

<hr />

<h2 id="version">VERSION</h2>
<ul>
  <li>JAVA Version : 1.8</li>
  <li>Spring Framework Version : 4.x.x</li>
</ul>

<hr />

<h2 id="maven-설정">MAVEN 설정</h2>
<p>Spring Framework 관련 maven 설정 필요</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- web.xml을 삭제하고 나오는 오류 메세지 해결 --&gt;</span>
<span class="nt">&lt;properties&gt;</span>
	<span class="nt">&lt;failOnMissingWebXml&gt;</span>false<span class="nt">&lt;/failOnMissingWebXml&gt;</span>
<span class="nt">&lt;/properties&gt;</span>

<span class="c">&lt;!-- Spring --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>spring-context<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>${org.springframework-version}<span class="nt">&lt;/version&gt;</span>
	<span class="nt">&lt;exclusions&gt;</span>
		<span class="c">&lt;!-- Exclude Commons Logging in favor of SLF4j --&gt;</span>
		<span class="nt">&lt;exclusion&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>commons-logging<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>commons-logging<span class="nt">&lt;/artifactId&gt;</span>
		<span class="nt">&lt;/exclusion&gt;</span>
	<span class="nt">&lt;/exclusions&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>spring-webmvc<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>${org.springframework-version}<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>spring-core<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>${org.springframework-version}<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>
<blockquote>
  <p>[참고]
web.xml 파일을 삭제하고 pom.xml에서 failOnMissingWebXml관련 오류가 발생할 경우 아래와 같은 설정을 pom.xml에 작성</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;properties&gt;</span>
	<span class="nt">&lt;failOnMissingWebXml&gt;</span>false<span class="nt">&lt;/failOnMissingWebXml&gt;</span>
<span class="nt">&lt;/properties&gt;</span>
</code></pre></div></div>

<hr />

<h2 id="기존-xml-파일-삭제">기존 XML 파일 삭제</h2>
<ul>
  <li>appServlet &gt; root-context.xml 삭제</li>
  <li>spring &gt; appServlet &gt; servlet-context.xml 삭제</li>
  <li>web.xml 삭제</li>
</ul>

<p><img src="/images/post/spring/javaconfig_project_before.png" alt="project_before" /></p>

<hr />

<h2 id="java-config-파일-생성">JAVA CONFIG 파일 생성</h2>
<p><img src="/images/post/spring/javaconfig_project_after.png" alt="project_after" /></p>

<ul>
  <li>RootAppConfig.java : root-context.xml 대체 생성</li>
</ul>

<p>처음 root-context.xml 설정엔 별 내용이 선언되어 있지 않기때문에 RootAppConfig.java파일에서도 별다른 설정은 없는 상태</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// RootAppConfig.java</span>

<span class="nd">@Configuration</span>
<span class="nd">@Import</span><span class="o">({})</span>
<span class="nd">@ComponentScan</span><span class="o">(</span>
<span class="n">basePackages</span> <span class="o">=</span> <span class="o">{</span><span class="s">"com.onlytigi.springStudy"</span><span class="o">},</span>
<span class="n">includeFilters</span> <span class="o">=</span> <span class="nd">@Filter</span><span class="o">(</span><span class="n">type</span> <span class="o">=</span> <span class="nc">FilterType</span><span class="o">.</span><span class="na">ANNOTATION</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="o">{</span><span class="nc">Service</span><span class="o">.</span><span class="na">class</span><span class="o">}))</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">RootAppConfig</span> <span class="kd">implements</span> <span class="nc">InitializingBean</span> <span class="o">{</span>    
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterPropertiesSet</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>SpringMvcConfig.java : servlet-context.xml 대체 생성</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- servlet-context.xml --&gt;</span>

<span class="c">&lt;!-- Enables the Spring MVC @Controller programming model --&gt;</span>
<span class="nt">&lt;annotation-driven</span> <span class="nt">/&gt;</span>

<span class="c">&lt;!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory --&gt;</span>
<span class="nt">&lt;resources</span> <span class="na">mapping=</span><span class="s">"/resources/**"</span> <span class="na">location=</span><span class="s">"/resources/"</span> <span class="nt">/&gt;</span>

<span class="c">&lt;!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory --&gt;</span>
<span class="nt">&lt;beans:bean</span> <span class="na">class=</span><span class="s">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;beans:property</span> <span class="na">name=</span><span class="s">"prefix"</span> <span class="na">value=</span><span class="s">"/WEB-INF/views/"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;beans:property</span> <span class="na">name=</span><span class="s">"suffix"</span> <span class="na">value=</span><span class="s">".jsp"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/beans:bean&gt;</span>

<span class="nt">&lt;context:component-scan</span> <span class="na">base-package=</span><span class="s">"com.onlytigi.springStudy"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// SpringMvcConfig.java</span>

<span class="nd">@Configuration</span>
<span class="nd">@EnableWebMvc</span>
<span class="nd">@EnableAspectJAutoProxy</span>
<span class="nd">@ComponentScan</span><span class="o">(</span><span class="n">basePackages</span> <span class="o">=</span> <span class="o">{</span><span class="s">"com.onlytigi.springStudy"</span><span class="o">},</span>
		<span class="n">includeFilters</span> <span class="o">=</span> <span class="nd">@Filter</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="o">{</span><span class="nc">Controller</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="nc">ControllerAdvice</span><span class="o">.</span><span class="na">class</span><span class="o">}),</span>
		<span class="n">useDefaultFilters</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringMvcConfig</span> <span class="kd">extends</span> <span class="nc">WebMvcConfigurerAdapter</span> <span class="o">{</span>

	<span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addResourceHandlers</span><span class="o">(</span><span class="nc">ResourceHandlerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">registry</span><span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="s">"/resources/**"</span><span class="o">).</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="s">"/resources/"</span><span class="o">).</span><span class="na">resourceChain</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
  <span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configureDefaultServletHandling</span><span class="o">(</span><span class="nc">DefaultServletHandlerConfigurer</span> <span class="n">configurer</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">configurer</span><span class="o">.</span><span class="na">enable</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configureContentNegotiation</span><span class="o">(</span><span class="nc">ContentNegotiationConfigurer</span> <span class="n">configurer</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">configurer</span><span class="o">.</span><span class="na">favorPathExtension</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
							<span class="o">.</span><span class="na">useJaf</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
							<span class="o">.</span><span class="na">ignoreAcceptHeader</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
							<span class="o">.</span><span class="na">defaultContentType</span><span class="o">(</span><span class="nc">MediaType</span><span class="o">.</span><span class="na">TEXT_HTML</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Bean</span>
	<span class="kd">public</span> <span class="nc">ViewResolver</span> <span class="nf">contentNegotiatingViewResolver</span><span class="o">(</span><span class="nc">ContentNegotiationManager</span> <span class="n">manager</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">ViewResolver</span><span class="o">&gt;</span> <span class="n">viewResolvers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ViewResolver</span><span class="o">&gt;();</span>

		<span class="nc">InternalResourceViewResolver</span> <span class="n">defaultViewResolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">InternalResourceViewResolver</span><span class="o">();</span>
		<span class="n">defaultViewResolver</span><span class="o">.</span><span class="na">setPrefix</span><span class="o">(</span><span class="s">"/WEB-INF/views/"</span><span class="o">);</span>
		<span class="n">defaultViewResolver</span><span class="o">.</span><span class="na">setSuffix</span><span class="o">(</span><span class="s">".jsp"</span><span class="o">);</span>
		<span class="n">defaultViewResolver</span><span class="o">.</span><span class="na">setViewClass</span><span class="o">(</span><span class="nc">JstlView</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

		<span class="n">viewResolvers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">defaultViewResolver</span><span class="o">);</span>

    <span class="nc">ContentNegotiatingViewResolver</span> <span class="n">contentViewResolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ContentNegotiatingViewResolver</span><span class="o">();</span>
    <span class="n">contentViewResolver</span><span class="o">.</span><span class="na">setViewResolvers</span><span class="o">(</span><span class="n">viewResolvers</span><span class="o">);</span>
    <span class="n">contentViewResolver</span><span class="o">.</span><span class="na">setContentNegotiationManager</span><span class="o">(</span><span class="n">manager</span><span class="o">);</span>
    <span class="n">contentViewResolver</span><span class="o">.</span><span class="na">setOrder</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">contentViewResolver</span><span class="o">;</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<ul>
  <li>WebConfig.java : web.xml 대체 생성</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- web.xml --&gt;</span>

<span class="c">&lt;!-- The definition of the Root Spring Container shared by all Servlets and Filters --&gt;</span>
<span class="nt">&lt;context-param&gt;</span>
	<span class="nt">&lt;param-name&gt;</span>contextConfigLocation<span class="nt">&lt;/param-name&gt;</span>
	<span class="nt">&lt;param-value&gt;</span>/WEB-INF/spring/root-context.xml<span class="nt">&lt;/param-value&gt;</span>
<span class="nt">&lt;/context-param&gt;</span>

<span class="c">&lt;!-- Creates the Spring Container shared by all Servlets and Filters --&gt;</span>
<span class="nt">&lt;listener&gt;</span>
	<span class="nt">&lt;listener-class&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="nt">&lt;/listener-class&gt;</span>
<span class="nt">&lt;/listener&gt;</span>

<span class="c">&lt;!-- Encoding Filter --&gt;</span>
<span class="nt">&lt;filter&gt;</span>
	<span class="nt">&lt;filter-name&gt;</span>encodingFilter<span class="nt">&lt;/filter-name&gt;</span>
	<span class="nt">&lt;filter-class&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="nt">&lt;/filter-class&gt;</span>
	<span class="nt">&lt;init-param&gt;</span>
			<span class="nt">&lt;param-name&gt;</span>encoding<span class="nt">&lt;/param-name&gt;</span>
			<span class="nt">&lt;param-value&gt;</span>UTF-8<span class="nt">&lt;/param-value&gt;</span>
	<span class="nt">&lt;/init-param&gt;</span>
<span class="nt">&lt;/filter&gt;</span>
<span class="nt">&lt;filter-mapping&gt;</span>
	<span class="nt">&lt;filter-name&gt;</span>encodingFilter<span class="nt">&lt;/filter-name&gt;</span>
	<span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
<span class="nt">&lt;/filter-mapping&gt;</span>

<span class="c">&lt;!-- Processes application requests --&gt;</span>
<span class="nt">&lt;servlet&gt;</span>
	<span class="nt">&lt;servlet-name&gt;</span>appServlet<span class="nt">&lt;/servlet-name&gt;</span>
	<span class="nt">&lt;servlet-class&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="nt">&lt;/servlet-class&gt;</span>
	<span class="nt">&lt;init-param&gt;</span>
		<span class="nt">&lt;param-name&gt;</span>contextConfigLocation<span class="nt">&lt;/param-name&gt;</span>
		<span class="nt">&lt;param-value&gt;</span>/WEB-INF/spring/appServlet/servlet-context.xml<span class="nt">&lt;/param-value&gt;</span>
	<span class="nt">&lt;/init-param&gt;</span>
	<span class="nt">&lt;load-on-startup&gt;</span>1<span class="nt">&lt;/load-on-startup&gt;</span>
<span class="nt">&lt;/servlet&gt;</span>

<span class="nt">&lt;servlet-mapping&gt;</span>
	<span class="nt">&lt;servlet-name&gt;</span>appServlet<span class="nt">&lt;/servlet-name&gt;</span>
	<span class="nt">&lt;url-pattern&gt;</span>/<span class="nt">&lt;/url-pattern&gt;</span>
<span class="nt">&lt;/servlet-mapping&gt;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// WebConfig.java</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebConfig</span> <span class="kd">implements</span> <span class="nc">WebApplicationInitializer</span> <span class="o">{</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStartup</span><span class="o">(</span><span class="nc">ServletContext</span> <span class="n">servletContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span> <span class="o">{</span>
		<span class="nc">AnnotationConfigWebApplicationContext</span> <span class="n">rootAppContext</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AnnotationConfigWebApplicationContext</span><span class="o">();</span>
		<span class="n">rootAppContext</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="nc">RootAppConfig</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
		<span class="n">servletContext</span><span class="o">.</span><span class="na">addListener</span><span class="o">(</span><span class="k">new</span> <span class="nc">ContextLoaderListener</span><span class="o">(</span><span class="n">rootAppContext</span><span class="o">));</span>

		<span class="nc">AnnotationConfigWebApplicationContext</span> <span class="n">springMvcContext</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AnnotationConfigWebApplicationContext</span><span class="o">();</span>
		<span class="n">springMvcContext</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="nc">SpringMvcConfig</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

		<span class="nc">FilterRegistration</span><span class="o">.</span><span class="na">Dynamic</span> <span class="n">filterReg</span> <span class="o">=</span> <span class="n">servletContext</span><span class="o">.</span><span class="na">addFilter</span><span class="o">(</span><span class="s">"encodingFilter"</span><span class="o">,</span> <span class="nc">CharacterEncodingFilter</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
		<span class="n">filterReg</span><span class="o">.</span><span class="na">setInitParameter</span><span class="o">(</span><span class="s">"encoding"</span><span class="o">,</span> <span class="s">"utf-8"</span><span class="o">);</span>
		<span class="n">filterReg</span><span class="o">.</span><span class="na">setInitParameter</span><span class="o">(</span><span class="s">"forceEncoding"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
		<span class="n">filterReg</span><span class="o">.</span><span class="na">addMappingForUrlPatterns</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="s">"/*"</span><span class="o">);</span>

		<span class="nc">ServletRegistration</span><span class="o">.</span><span class="na">Dynamic</span> <span class="n">dispatcherServlet</span> <span class="o">=</span> <span class="n">servletContext</span><span class="o">.</span><span class="na">addServlet</span><span class="o">(</span><span class="s">"dispatcherServlet"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">DispatcherServlet</span><span class="o">(</span><span class="n">springMvcContext</span><span class="o">));</span>
		<span class="n">dispatcherServlet</span><span class="o">.</span><span class="na">setLoadOnStartup</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
		<span class="n">dispatcherServlet</span><span class="o">.</span><span class="na">addMapping</span><span class="o">(</span><span class="s">"/"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /></p>

<blockquote>
  <p>[참고]
javax.servlet.ServletContext 에서 addListener 가 보이지 않는다면 pom.xml의 javax.servlet의 버전을 수정하여 해결할 수 있다.</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>javax.servlet-api<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>3.0.1<span class="nt">&lt;/version&gt;</span>
	<span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>
:ET